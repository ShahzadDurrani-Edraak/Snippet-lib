{"ast":null,"code":"var _jsxFileName = \"/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Single.jsx\",\n  _s = $RefreshSig$();\n//import image from \"../code.jpg\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Snippets from \"../Components/json/Snippets.json\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Single = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const curr_snippet = Snippets.find(snippet => snippet.id === id);\n  //const { snipId, title, description, image, codes } = curr_snippet;\n  const [copy, setCopy] = useState(\"false\");\n  console.log(curr_snippet);\n\n  //const handleCopy = (id) => {\n  //  console.log(copy);\n  //  const curr_code = codes.find((code) => code.id == id);\n  //  navigator.clipboard.writeText(curr_code.code);\n  // setCopy(true);\n  //  setTimeout(() => {\n  //    setCopy(false);\n  //  }, 100);\n  // };\n\n  const handleCopy = id => {\n    setCopy(prevCopy => {\n      const updatedCopy = {\n        ...prevCopy\n      }; // Create a shallow copy of the copy state\n      updatedCopy[id] = true; // Set the copy state for the specified code snippet to true\n      return updatedCopy;\n    });\n    const curr_code = curr_snippet.codes.find(code => code.id === id);\n    navigator.clipboard.writeText(curr_code.code);\n    setTimeout(() => {\n      setCopy(prevCopy => {\n        const updatedCopy = {\n          ...prevCopy\n        }; // Create a shallow copy of the copy state\n        updatedCopy[id] = false; // Set the copy state for the specified code snippet back to false\n        return updatedCopy;\n      });\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snippet-card\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snippet-picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: curr_snippet.image,\n              alt: \"snippet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"snippet-title\",\n            children: curr_snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"snippet-description\",\n            children: curr_snippet.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), curr_snippet.codes.map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snippetCode\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"code-heeader d-flex justify-content-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: code.language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), copy[code.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inline-flex items-center gap-1\",\n                onClick: () => handleCopy(code.id),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fa-regular fa-clipboard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), \"copy code\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inline-flex items-center gap-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fa-solid fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), \"copied\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n              language: code.language,\n              customStyle: {\n                padding: \"25px\"\n              },\n              wrapLongLines: true,\n              children: code.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Single, \"IZn/X7KxfUkpqk7WxgLS5zziX18=\", false, function () {\n  return [useParams];\n});\n_c = Single;\nexport default Single;\nvar _c;\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"names":["Prism","SyntaxHighlighter","dark","Link","useParams","Snippets","useState","jsxDEV","_jsxDEV","Single","_s","id","curr_snippet","find","snippet","copy","setCopy","console","log","handleCopy","prevCopy","updatedCopy","curr_code","codes","code","navigator","clipboard","writeText","setTimeout","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","title","description","map","language","onClick","customStyle","padding","wrapLongLines","_c","$RefreshReg$"],"sources":["/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Single.jsx"],"sourcesContent":["//import image from \"../code.jpg\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Snippets from \"../Components/json/Snippets.json\";\nimport { useState } from \"react\";\n\nconst Single = () => {\n  const { id } = useParams();\n  const curr_snippet = Snippets.find((snippet) => snippet.id === id);\n  //const { snipId, title, description, image, codes } = curr_snippet;\n  const [copy, setCopy] = useState(\"false\");\n\n  console.log(curr_snippet);\n\n  //const handleCopy = (id) => {\n  //  console.log(copy);\n  //  const curr_code = codes.find((code) => code.id == id);\n  //  navigator.clipboard.writeText(curr_code.code);\n  // setCopy(true);\n  //  setTimeout(() => {\n  //    setCopy(false);\n  //  }, 100);\n  // };\n\n  const handleCopy = (id) => {\n    setCopy((prevCopy) => {\n      const updatedCopy = { ...prevCopy }; // Create a shallow copy of the copy state\n      updatedCopy[id] = true; // Set the copy state for the specified code snippet to true\n      return updatedCopy;\n    });\n\n    const curr_code = curr_snippet.codes.find((code) => code.id === id);\n    navigator.clipboard.writeText(curr_code.code);\n\n    setTimeout(() => {\n      setCopy((prevCopy) => {\n        const updatedCopy = { ...prevCopy }; // Create a shallow copy of the copy state\n        updatedCopy[id] = false; // Set the copy state for the specified code snippet back to false\n        return updatedCopy;\n      });\n    }, 100);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"snippet-card\">\n            <Link to=\"/\">Back</Link>\n            <div className=\"snippet-picture\">\n              <img src={curr_snippet.image} alt=\"snippet\" />\n            </div>\n            <h1 className=\"snippet-title\">{curr_snippet.title}</h1>\n            <p className=\"snippet-description\">{curr_snippet.description}</p>\n\n            {curr_snippet.codes.map((code) => (\n              <div className=\"snippetCode\">\n                <div className=\"code-heeader d-flex justify-content-between items-center\">\n                  <p className=\"text-sm\">{code.language}</p>\n                  {copy[code.id] ? (\n                    <button\n                      className=\"inline-flex items-center gap-1\"\n                      onClick={() => handleCopy(code.id)}\n                    >\n                      <span className=\"fa-regular fa-clipboard\"></span>\n                      copy code\n                    </button>\n                  ) : (\n                    <button className=\"inline-flex items-center gap-1\">\n                      <span className=\"fa-solid fa-check\"></span>\n                      copied\n                    </button>\n                  )}\n                </div>\n                <SyntaxHighlighter\n                  language={code.language}\n                  customStyle={{ padding: \"25px\" }}\n                  wrapLongLines={true}\n                >\n                  {code.code}\n                </SyntaxHighlighter>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Single;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}