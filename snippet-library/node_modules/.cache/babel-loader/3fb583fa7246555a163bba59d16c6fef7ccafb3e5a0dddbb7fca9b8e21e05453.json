{"ast":null,"code":"var _jsxFileName = \"/Users/Shahzad/Documents/snippet-library/src/Components/Single.jsx\";\nimport image from \"../code.jpg\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark, docco, atomDark, atomOneDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Single = () => {\n  const codeString = `<pre className=\"snippet-preview\">\n              <small class=\"snippetTag\">HTML</small>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since <br />\n              the 1500s, when an unknown printer took a galley of type and\n              scrambled it to make a type specimen book. It has survived not\n              only five centuries,\n              <br />\n              but also the leap into electronic typesetting, remaining\n              essentially unchanged. It was popularised in the 1960s with the\n              release <br />\n              of Letraset sheets containing Lorem Ipsum passages, and more\n              recently with desktop publishing software like <br />\n              Aldus PageMaker including versions of Lorem Ipsum.\n            </pre>`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snippet-card\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snippet-picture\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"snippet-title\",\n            children: \"Snippet Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"snippet-description\",\n            children: \"Snippet description goes here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            language: \"jsx\",\n            style: atomDark,\n            children: codeString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = Single;\nexport default Single;\nvar _c;\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"names":["image","Prism","SyntaxHighlighter","dark","docco","atomDark","atomOneDark","Link","jsxDEV","_jsxDEV","Single","codeString","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","language","style","_c","$RefreshReg$"],"sources":["/Users/Shahzad/Documents/snippet-library/src/Components/Single.jsx"],"sourcesContent":["import image from \"../code.jpg\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport {\n  dark,\n  docco,\n  atomDark,\n  atomOneDark,\n} from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link } from \"react-router-dom\";\n\nconst Single = () => {\n  const codeString = `<pre className=\"snippet-preview\">\n              <small class=\"snippetTag\">HTML</small>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since <br />\n              the 1500s, when an unknown printer took a galley of type and\n              scrambled it to make a type specimen book. It has survived not\n              only five centuries,\n              <br />\n              but also the leap into electronic typesetting, remaining\n              essentially unchanged. It was popularised in the 1960s with the\n              release <br />\n              of Letraset sheets containing Lorem Ipsum passages, and more\n              recently with desktop publishing software like <br />\n              Aldus PageMaker including versions of Lorem Ipsum.\n            </pre>`;\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"snippet-card\">\n            <Link to=\"/\">Back</Link>\n            <div className=\"snippet-picture\">\n              <img src={image} alt=\"picture\" />\n            </div>\n            <h1 className=\"snippet-title\">Snippet Title</h1>\n            <p className=\"snippet-description\">\n              Snippet description goes here.\n            </p>\n\n            <SyntaxHighlighter language=\"jsx\" style={atomDark}>\n              {codeString}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Single;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SACEC,IAAI,EACJC,KAAK,EACLC,QAAQ,EACRC,WAAW,QACN,gDAAgD;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,UAAU,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;EACjB,oBACEF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBJ,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBJ,OAAA;QAAKG,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBJ,OAAA;UAAKG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BJ,OAAA,CAACF,IAAI;YAACO,EAAE,EAAC,GAAG;YAAAD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxBT,OAAA;YAAKG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BJ,OAAA;cAAKU,GAAG,EAAEnB,KAAM;cAACoB,GAAG,EAAC;YAAS;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACNT,OAAA;YAAIG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDT,OAAA;YAAGG,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAEnC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJT,OAAA,CAACP,iBAAiB;YAACmB,QAAQ,EAAC,KAAK;YAACC,KAAK,EAAEjB,QAAS;YAAAQ,QAAA,EAC/CF;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAvCIb,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}