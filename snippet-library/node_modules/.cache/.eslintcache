[{"/Users/Shahzad/Documents/Snippet/snippet-library/src/index.js":"1","/Users/Shahzad/Documents/Snippet/snippet-library/src/reportWebVitals.js":"2","/Users/Shahzad/Documents/Snippet/snippet-library/src/App.js":"3","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Content.jsx":"4","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Single.jsx":"5","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Home.jsx":"6","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Navbar.jsx":"7","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Sidebar.jsx":"8","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Add-snippet.jsx":"9","/Users/Shahzad/Documents/Snippet/snippet-library/src/api/api.js":"10"},{"size":834,"mtime":1686952677489,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1686818607809,"results":"13","hashOfConfig":"12"},{"size":616,"mtime":1687127658335,"results":"14","hashOfConfig":"12"},{"size":1694,"mtime":1687443840317,"results":"15","hashOfConfig":"12"},{"size":3147,"mtime":1687268618432,"results":"16","hashOfConfig":"12"},{"size":2539,"mtime":1687442790831,"results":"17","hashOfConfig":"12"},{"size":837,"mtime":1686918169757,"results":"18","hashOfConfig":"12"},{"size":2579,"mtime":1687443709606,"results":"19","hashOfConfig":"12"},{"size":7504,"mtime":1687428948518,"results":"20","hashOfConfig":"12"},{"size":706,"mtime":1687262277673,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"grp16c",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"52","usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Shahzad/Documents/Snippet/snippet-library/src/index.js",[],[],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/reportWebVitals.js",[],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/App.js",[],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Content.jsx",["56","57","58","59"],[],"import { Link } from \"react-router-dom\";\nimport Snippets from \"../Components/json/Snippets.json\";\nimport { dataContext } from \"./Home\";\nimport { useContext, useEffect } from \"react\";\n\nconst Content = () => {\n  const [data, setData] = useContext(dataContext);\n  const [filteredData, setfilteredData] = useContext(dataContext);\n  console.log(\"content\", filteredData);\n  useEffect(() => {}, [dataContext]);\n\n  return (\n    <section className=\"section-products\">\n      <div className=\"container\" id=\"container\">\n        <div className=\"row\">\n          {/* Single product */}\n          {Array.isArray(filteredData)\n            ? data.map((snippet) => (\n                <div className=\"col-md-6 col-lg-4 col-xl-3\" key={snippet.id}>\n                  <Link to={`/snippet/${snippet.id}`}>\n                    <div id=\"product-1\" className=\"single-product\">\n                      <div className=\"part-1\">\n                        <img src={snippet.image} alt=\"snippet\"></img>\n                        <span className=\"new\">{snippet.category}</span>\n                      </div>\n                      <div className=\"part-2\">\n                        <h3 className=\"product-title\">{snippet.title}</h3>\n                        <p className=\"product-desc\">\n                          {snippet.description\n                            ? snippet.description.substring(0, 50)\n                            : \"\"}\n                        </p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              ))\n            : console.log(\"is not array\")}\n\n          {/* Single product */}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Content;\n","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Single.jsx",["60","61","62","63"],[],"//import image from \"../code.jpg\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Snippets from \"../Components/json/Snippets.json\";\nimport { useState } from \"react\";\n\nconst Single = () => {\n  const { id } = useParams();\n  const curr_snippet = Snippets.find((snippet) => snippet.id == id);\n  const { title, description, image, codes } = curr_snippet;\n  const [copy, setCopy] = useState(\"false\");\n\n  //const handleCopy = (id) => {\n  //  console.log(copy);\n  //  const curr_code = codes.find((code) => code.id == id);\n  //  navigator.clipboard.writeText(curr_code.code);\n  // setCopy(true);\n  //  setTimeout(() => {\n  //    setCopy(false);\n  //  }, 100);\n  // };\n\n  const handleCopy = (id) => {\n    setCopy((prevCopy) => {\n      const updatedCopy = { ...prevCopy }; // Create a shallow copy of the copy state\n      updatedCopy[id] = true; // Set the copy state for the specified code snippet to true\n      return updatedCopy;\n    });\n\n    const curr_code = codes.find((code) => code.id == id);\n    navigator.clipboard.writeText(curr_code.code);\n\n    setTimeout(() => {\n      setCopy((prevCopy) => {\n        const updatedCopy = { ...prevCopy }; // Create a shallow copy of the copy state\n        updatedCopy[id] = false; // Set the copy state for the specified code snippet back to false\n        return updatedCopy;\n      });\n    }, 100);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"snippet-card\">\n            <Link to=\"/\">Back</Link>\n            <div className=\"snippet-picture\">\n              <img src={image} alt=\"picture\" />\n            </div>\n            <h1 className=\"snippet-title\">{title}</h1>\n            <p className=\"snippet-description\">{description}</p>\n\n            {codes.map((code) => (\n              <div className=\"snippetCode\" key={code.id}>\n                <div className=\"code-heeader d-flex justify-content-between items-center\">\n                  <p className=\"text-sm\">{code.language}</p>\n                  {copy[code.id] ? (\n                    <button\n                      className=\"inline-flex items-center gap-1\"\n                      onClick={() => handleCopy(code.id)}\n                    >\n                      <span className=\"fa-regular fa-clipboard\"></span>\n                      copy code\n                    </button>\n                  ) : (\n                    <button className=\"inline-flex items-center gap-1\">\n                      <span className=\"fa-solid fa-check\"></span>\n                      copied\n                    </button>\n                  )}\n                </div>\n                <SyntaxHighlighter\n                  language={code.language}\n                  customStyle={{ padding: \"25px\" }}\n                  wrapLongLines={true}\n                >\n                  {code.code}\n                </SyntaxHighlighter>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Single;\n","/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Home.jsx",["64"],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Navbar.jsx",[],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Sidebar.jsx",["65","66","67","68","69","70"],[],"/Users/Shahzad/Documents/Snippet/snippet-library/src/Components/Add-snippet.jsx",["71","72","73","74","75","76","77","78","79"],[],"import { Link } from \"react-router-dom\";\nimport { saveData } from \"../api/api\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useContext } from \"react\";\nimport { dataContext } from \"./Home\";\nimport axios from \"axios\";\n\nconst AddSnippet = ({ onChangeContent }) => {\n  const [data, setData] = useContext(dataContext);\n  let [idCounter, setCounter] = useState(1);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [btnUpload, setBtnUpload] = useState(\"\");\n\n  function handleAdd() {\n    const selection = document.getElementById(\"snippet-language\");\n    let selection_value = selection.value;\n    const div_snippet = document.getElementById(\"container-snippet\");\n    let snippet = \"\";\n    snippet = snippet.concat(\n      \"<div class='textarea-snippet'><small class='snippetTag'>\",\n      selection_value,\n      \"</small><textarea class='form-control text_area' id='text_area' snippet='\",\n      selection_value,\n      \"' placeholder='Add snippet here' name='code' ></textarea></div>\"\n    );\n    selection_value !== \"\"\n      ? div_snippet.insertAdjacentHTML(\"beforeend\", snippet)\n      : document.getElementById(\"snippet-language\").focus();\n    selection_value = \"\";\n  }\n\n  //image upload\n\n  const onFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = async () => {\n    try {\n      const imageData = new FormData();\n      imageData.append(\"image\", selectedFile);\n\n      const response = await axios.post(\n        \"http://localhost:3001/api/upload\",\n        imageData\n      );\n\n      // Set the state with the uploaded file information\n      const uploadedImage = response.data.image;\n      setFormData({ ...formData, image: \"/images/\" + uploadedImage + \".jpg\" });\n      console.log(formData);\n\n      setBtnUpload(\"sucess\");\n      console.log(\"Image uploaded successfully\");\n    } catch (error) {\n      setBtnUpload(\"error\");\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n\n  const [formData, setFormData] = useState({});\n  const [codesnippet, setsnippet] = useState([]);\n  var [textareaValue, setText] = useState([]);\n\n  const inputRef = useRef(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    var arr = [];\n    var textareas = document.querySelectorAll(\".text_area\");\n    textareas.forEach(function (textarea) {\n      var textareaName = textarea.getAttribute(\"snippet\");\n      var textareaValue = textarea.value;\n      const code_data = {\n        language: textareaName,\n        code: textareaValue,\n      };\n\n      arr.push(code_data);\n    });\n    setFormData({ ...formData, [\"code\"]: arr, [\"id\"]: idCounter });\n    setCounter((idCounter = idCounter + 1));\n    try {\n      await saveData(formData);\n      console.log(\"Data saved successfully\");\n    } catch (error) {\n      // Error saving data\n      console.error(error);\n    }\n\n    console.log(formData);\n  };\n\n  useEffect(() => {}, data);\n\n  return (\n    <>\n      <div className=\"container container-add\">\n        <div className=\"row d-flex justify-content-center\">\n          <Link to=\"/\" className=\"btn-back\">\n            Back to home\n          </Link>\n          <form onSubmit={handleSubmit}>\n            <div className=\"row mb-3\">\n              <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">\n                Language\n              </label>\n              <div className=\"col-sm-10 padding-none\">\n                <select\n                  className=\"form-select form-select-lg mb-3\"\n                  aria-label=\".form-select-lg example\"\n                  name=\"category\"\n                  onChange={handleChange}\n                >\n                  <option defaultValue=\"\">Select language</option>\n                  <option value=\"html\">Html</option>\n                  <option value=\"scss\">Scss</option>\n                  <option value=\"js\">JavaScript</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label htmlFor=\"input-title\" className=\"col-sm-2 col-form-label\">\n                Title\n              </label>\n              <div className=\"col-sm-10 padding-none\">\n                <input\n                  type=\"title\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  id=\"input-title\"\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label htmlFor=\"input-desc\" className=\"col-sm-2 col-form-label\">\n                Description\n              </label>\n              <div className=\"col-sm-10 padding-none\">\n                <input\n                  type=\"desc\"\n                  className=\"form-control\"\n                  id=\"input-desc\"\n                  name=\"description\"\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label htmlFor=\"input-desc\" className=\"col-sm-2 col-form-label\">\n                Upload Image\n              </label>\n              <div className=\"col-sm-10 padding-none\">\n                <input type=\"file\" onChange={onFileChange} />\n\n                {btnUpload === \"sucess\" ? (\n                  <button className=\"btn btn-success\" onClick={onFileUpload}>\n                    Upload\n                  </button>\n                ) : btnUpload === \"error\" ? (\n                  <button class=\"btn btn-danger\" onClick={onFileUpload}>\n                    Upload\n                  </button>\n                ) : (\n                  <button\n                    className=\"\n                btn btn-primary\"\n                    onClick={onFileUpload}\n                  >\n                    Upload\n                  </button>\n                )}\n              </div>\n            </div>\n\n            <div className=\"row mb-3\">\n              <label htmlFor=\"input-code\" className=\"col-sm-2 col-form-label\">\n                Add Snippet\n              </label>\n              <div className=\"col-sm-10\">\n                <div className=\"row container-snippet\" id=\"container-snippet\">\n                  <div className=\"select-lang col-md-4\">\n                    <select\n                      className=\"form-select form-select-md mb-3 col-md-5\"\n                      id=\"snippet-language\"\n                      aria-label=\".form-select-lg example\"\n                    >\n                      <option defaultValue=\"null\" placeholder=\"Select Language\">\n                        {\" \"}\n                      </option>\n                      <option value=\"html\">Html</option>\n                      <option value=\"scss\">Scss</option>\n                      <option value=\"js\">JavaScript</option>\n                    </select>\n                  </div>\n                  <div className=\"btn-add col-md-2\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={handleAdd}\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary float-end btn-post\"\n            >\n              Post\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddSnippet;\n","/Users/Shahzad/Documents/Snippet/snippet-library/src/api/api.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":7,"column":16,"nodeType":"82","messageId":"83","endLine":7,"endColumn":23},{"ruleId":"80","severity":1,"message":"85","line":8,"column":24,"nodeType":"82","messageId":"83","endLine":8,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":10,"column":23,"nodeType":"88","endLine":10,"endColumn":36,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"90","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":10,"column":62,"nodeType":"93","messageId":"94","endLine":10,"endColumn":64},{"ruleId":"91","severity":1,"message":"92","line":31,"column":52,"nodeType":"93","messageId":"94","endLine":31,"endColumn":54},{"ruleId":"95","severity":1,"message":"96","line":50,"column":15,"nodeType":"97","endLine":50,"endColumn":48},{"ruleId":"80","severity":1,"message":"98","line":2,"column":19,"nodeType":"82","messageId":"83","endLine":2,"endColumn":31},{"ruleId":"80","severity":1,"message":"84","line":6,"column":16,"nodeType":"82","messageId":"83","endLine":6,"endColumn":23},{"ruleId":"80","severity":1,"message":"99","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":22},{"ruleId":"80","severity":1,"message":"100","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":22},{"ruleId":"80","severity":1,"message":"101","line":8,"column":24,"nodeType":"82","messageId":"83","endLine":8,"endColumn":34},{"ruleId":"86","severity":1,"message":"102","line":34,"column":6,"nodeType":"88","endLine":34,"endColumn":23,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":13,"nodeType":"97","endLine":53,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":9,"column":16,"nodeType":"82","messageId":"83","endLine":9,"endColumn":23},{"ruleId":"80","severity":1,"message":"106","line":62,"column":10,"nodeType":"82","messageId":"83","endLine":62,"endColumn":21},{"ruleId":"80","severity":1,"message":"107","line":62,"column":23,"nodeType":"82","messageId":"83","endLine":62,"endColumn":33},{"ruleId":"80","severity":1,"message":"108","line":63,"column":8,"nodeType":"82","messageId":"83","endLine":63,"endColumn":21},{"ruleId":"80","severity":1,"message":"109","line":63,"column":23,"nodeType":"82","messageId":"83","endLine":63,"endColumn":30},{"ruleId":"80","severity":1,"message":"110","line":65,"column":9,"nodeType":"82","messageId":"83","endLine":65,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":84,"column":32,"nodeType":"113","messageId":"114","endLine":84,"endColumn":45,"fix":"115"},{"ruleId":"111","severity":1,"message":"116","line":84,"column":47,"nodeType":"113","messageId":"114","endLine":84,"endColumn":64,"fix":"117"},{"ruleId":"86","severity":1,"message":"118","line":97,"column":23,"nodeType":"82","endLine":97,"endColumn":27},"no-unused-vars","'Snippets' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setfilteredData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dataContext'. Either exclude it or remove the dependency array. Outer scope values like 'dataContext' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["119"],"'dark' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'filteredData' is defined but never used.","'filteredData' is assigned a value but never used.","'foundElement' is assigned a value but never used.","'setElement' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filteredProducts'. Either include it or remove the dependency array.",["120"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'codesnippet' is assigned a value but never used.","'setsnippet' is assigned a value but never used.","'textareaValue' is assigned a value but never used.","'setText' is assigned a value but never used.","'inputRef' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"code\"] found.","Property","unnecessarilyComputedProperty",{"range":"121","text":"122"},"Unnecessarily computed property [\"id\"] found.",{"range":"123","text":"124"},"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},[2696,2704],"\"code\"",[2711,2717],"\"id\"","Update the dependencies array to be: []",{"range":"129","text":"130"},"Update the dependencies array to be: [filteredProducts, setfilteredData]",{"range":"131","text":"132"},[388,401],"[]",[1015,1032],"[filteredProducts, setfilteredData]"]